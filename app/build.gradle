plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'org.jetbrains.kotlin.kapt'
    id 'jacoco'
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ]))
}

def getGitRevision = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            standardOutput = stdout
            commandLine 'git', 'rev-list', '--first-parent', '--count', 'HEAD'
        }
        println("Building revision #" + stdout)
        return stdout.toString("ASCII").trim() as Integer
    }
    catch (Exception e) {
        e.printStackTrace()
        return 1
    }
}

apply plugin: 'realm-android'

android {
    namespace 'uk.co.cerihughes.mgm.android'
    compileSdk 34
    def revision = getGitRevision()
    defaultConfig {
        applicationId "uk.co.cerihughes.mgm.android"
        minSdk 24
        targetSdk 34
        versionCode revision
        versionName "1.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                jacoco.excludes = ['jdk.internal.*']
            }
        }
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    // Top level dependencies
    implementation project(path: ':remoteapi')
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'

    // Architecture dependencies
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-viewmodel:$koin_version"

    // Android UI dependencies
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Other UI dependencies
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Maps dependencies
    implementation 'com.google.android.gms:play-services-maps:18.2.0'

    // Networking dependencies
    implementation "org.threeten:threetenbp:$threeten_version"
    implementation "com.google.code.gson:gson:$gson_version"

    // Test Dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.insert-koin:koin-test:$koin_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}